apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    k8s-app: kube-dns
  name: coredns-operator-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  labels:
    k8s-app: kube-dns
  name: coredns.addons.x-k8s.io
spec:
  group: addons.x-k8s.io
  names:
    kind: CoreDNS
    listKind: CoreDNSList
    plural: coredns
    singular: coredns
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: CoreDNS is the Schema for the coredns API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: CoreDNSSpec defines the desired state of CoreDNS
          properties:
            channel:
              description: 'Channel specifies a channel that can be used to resolve
                a specific addon, eg: stable It will be ignored if Version is specified'
              type: string
            corefile:
              type: string
            dnsDomain:
              type: string
            dnsIP:
              type: string
            patches:
              items:
                type: object
              type: array
            version:
              description: Version specifies the exact addon version to be deployed,
                eg 1.2.3 It should not be specified if Channel is specified
              type: string
          type: object
        status:
          description: CoreDNSStatus defines the observed state of CoreDNS
          properties:
            errors:
              items:
                type: string
              type: array
            healthy:
              type: boolean
          required:
          - healthy
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    k8s-app: kube-dns
  name: coredns-operator-leader-election-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    k8s-app: kube-dns
  name: coredns-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - serviceaccounts
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - nodes
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - list
- apiGroups:
  - addons.x-k8s.io
  resources:
  - coredns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - addons.x-k8s.io
  resources:
  - coredns/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apps
  - extensions
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    k8s-app: kube-dns
  name: coredns-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    k8s-app: kube-dns
  name: coredns-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: kube-dns
  name: coredns-operator-leader-election-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: coredns-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: kube-dns
  name: coredns-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: coredns-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    k8s-app: kube-dns
  name: coredns-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: coredns-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    k8s-app: kube-dns
  name: coredns-operator-controller-manager-metrics-service
  namespace: kube-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
    k8s-app: kube-dns
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    k8s-app: kube-dns
  name: coredns-operator-controller-manager
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      k8s-app: kube-dns
  template:
    metadata:
      labels:
        control-plane: controller-manager
        k8s-app: kube-dns
    spec:
      containers:
      - args:
        - --enable-leader-election
        command:
        - /manager
        image: justinsb/coredns-operator:latest
        name: manager
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
